--- drivers/leds/leds-pm8xxx.c	2013-10-21 21:14:33.000000000 +0800
+++ drivers/leds/leds-pm8xxx.c	2013-10-29 23:38:18.000000000 +0800
@@ -21,7 +21,6 @@
 #include <linux/workqueue.h>
 #include <linux/err.h>
 #include <linux/ctype.h>
-#include <linux/delay.h>
 
 #include <linux/mfd/pm8xxx/core.h>
 #include <linux/mfd/pm8xxx/pwm.h>
@@ -267,124 +263,21 @@
 			 led->id, rc);
 }
 
-static int led_wled_sync(struct pm8xxx_led_data *led)
-{
-	int val, rc;
-
-	/* sync */
-	val = WLED_SYNC_VAL;
-	rc = pm8xxx_writeb(led->dev->parent, WLED_SYNC_REG, val);
-	if (rc) {
-		dev_err(led->dev->parent,
-			"can't read wled sync register rc=%d\n", rc);
-		return rc;
-	}
-
-	val = WLED_SYNC_RESET_VAL;
-	rc = pm8xxx_writeb(led->dev->parent, WLED_SYNC_REG, val);
-	if (rc) {
-		dev_err(led->dev->parent,
-			"can't read wled sync register rc=%d\n", rc);
-		return rc;
-	}
-
-	return 0;
-}
-
 static int
 led_wled_set(struct pm8xxx_led_data *led, enum led_brightness value)
 {
 	int rc, duty;
-	u8 val, i, num_wled_strings, prev_boost_val;
-
-	num_wled_strings = led->wled_cfg->num_strings;
+	u8 val, i, num_wled_strings;
 
 	if (value > WLED_MAX_LEVEL)
 		value = WLED_MAX_LEVEL;
 
 	if (value == 0) {
-		rc = pm8xxx_readb(led->dev->parent,
-				WLED_BOOST_CFG_REG, &prev_boost_val);
-		if (rc) {
-			dev_err(led->dev->parent, "failed to read wled boost" \
-				" register, rc=%d\n", rc);
-			return rc;
-		}
-
-		val = prev_boost_val & WLED_MAX_CURR_MASK;
-		val |= WLED_OVP_ILIM_CODE;
-		rc = pm8xxx_writeb(led->dev->parent, WLED_BOOST_CFG_REG, val);
-		if (rc) {
-			dev_err(led->dev->parent, "failed to write wled boost" \
-				" register, rc=%d\n", rc);
-			return rc;
-		}
-		/* All WLED strings use same value in WLED CURR_CFG_REG */
-		rc = pm8xxx_readb(led->dev->parent,
-			WLED_MAX_CURR_CFG_REG(0), &val);
-		if (rc) {
-			dev_err(led->dev->parent, "failed to read" \
-				" curr reg, rc=%d\n", rc);
-			return rc;
-		}
-
-		for (i = 0; i < num_wled_strings; i++) {
-			rc = pm8xxx_writeb(led->dev->parent,
-				WLED_MAX_CURR_CFG_REG(i), WLED_NO_CURR);
-			if (rc) {
-				dev_err(led->dev->parent, "failed to write" \
-					" curr reg, rc=%d\n", rc);
-				return rc;
-			}
-		}
-
-		rc = led_wled_sync(led);
-		if (rc) {
-			dev_err(led->dev->parent, "failed to write wled sync" \
-				" register, rc=%d\n", rc);
-			return rc;
-		}
-
-		rc = pm8xxx_writeb(led->dev->parent, WLED_MOD_CTRL_REG,
-			WLED_OVP_SPIKE_BOOST);
-		if (rc) {
-			dev_err(led->dev->parent, "failed to write wled ctrl" \
-				" register, rc=%d\n", rc);
-			return rc;
-		}
-
-		usleep(1000);
-
 		rc = pm8xxx_writeb(led->dev->parent, WLED_MOD_CTRL_REG,
-			WLED_BOOST_OFF);
+				WLED_BOOST_OFF);
 		if (rc) {
-			dev_err(led->dev->parent, "failed to write wled ctrl" \
-				" register, rc=%d\n", rc);
-			return rc;
-		}
-
-		for (i = 0; i < num_wled_strings; i++) {
-			rc = pm8xxx_writeb(led->dev->parent,
-				WLED_MAX_CURR_CFG_REG(i), val);
-			if (rc) {
-				dev_err(led->dev->parent, "failed to write" \
-					" curr reg, rc=%d\n", rc);
-				return rc;
-			}
-		}
-
-		rc = led_wled_sync(led);
-		if (rc) {
-			dev_err(led->dev->parent, "failed to write wled sync" \
-				" register, rc=%d\n", rc);
-			return rc;
-		}
-
-		rc = pm8xxx_writeb(led->dev->parent, WLED_BOOST_CFG_REG,
-			prev_boost_val);
-		if (rc) {
-			dev_err(led->dev->parent, "failed to write wled boost" \
-				" register, rc=%d\n", rc);
+			dev_err(led->dev->parent, "can't write wled ctrl config"
+				" register rc=%d\n", rc);
 			return rc;
 		}
 	} else {
